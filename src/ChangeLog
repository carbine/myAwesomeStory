
2012-06-04 --:--:-- Gill <gmail gillemorris>
	todo:
	standardize state/reward function

	created Road/Intersect classes. haven't done much in the way of
	using them

	* Main.java: no longer manages half of LearnerModuleImpl's
	    implementation -- yay!

2012-06-04 15:43:31 Gill <gmail gillemorris>
	Updating a bunch of interfaces; hopefully reduce the complexity
	sufficiently that variable lanes, turning traffic, etc can be
	implemented reasonably easily.

	* interfaces/Car.java: 
	    - merged updateVelocity and updatePosition into move
	    - removed stopped and getChar

2012-06-04 12:18:38 Gill <gmail gillemorris>
	* Makefile: now uses restored package heirarchy

2012-06-03 20:37:51 Gill <gmail gillemorris>
	* Main.java: minor changes; can pass RL parameters in as arguments
	* interfaces/LearningModule.java: ""
	* LearningModuleImpl.java: "". Also reformatted the code and some
	    logic here and there. While some design aspects remain
	    questionable I change it further due to time constraints.
	    Unless something is suggested.

2012-06-03 --:--:-- Gill <gmail gillemorris>
	* CarImpl.java: stopped() now returns whether the car has zero
	   velocity (rather than zero position).
	* Main.java: now evaluates the success of the learning algorithm.

2012-06-03 6:03: -- Nathan
    *updated to have 4 traffic lights. this required some reworking of
     how we update car velocities as we don't want to move a car across
     an intersection when there is no room for it on the other side
    *a few other minor changes here and there to handle a larger map, etc
    *tried to implement turning cars but backed out before it got too
     complex. I don't think we should bother with implementing this - it
     requires quite a lot of fiddlyness to do and really adds very little
     value to the learning as our learning depends only on cars waiting,
     not on direction they could be turning

2012-06-03 04:36:-- Gill <gmail gillemorris>
	* Viewer.java: added some rudimentary error checking
	* RoadMapImp.java: catAt and roadAt no longer switch the axes.
	    also, decided we needed to follow convention in our definitions
	    of x-direction and y-direction or things would quickly become
	    unmaintainable.
	* interfaces/Car.java: removed duplicate functionality of getChar
	* interfaces/TrafficLight.java: clarified some specs; comments now
	    reflect its actual functionality
	* CarImpl.java: removed getChar; expanded slightly the logic of
		`stop' in `updateVelocity'
	* LearningModuleImpl.java: updated directional convention, and then
	    speculated on why there are so many 0 q-values.

2012-06-02 19:11:12 Gill <gmail gillemorris>
	* Viewer.java: now displays amber lights, intersection is
	    road-colored, cars are now rectangles not squares. -- i still
		intend to use arrows but they're currently buggy. i'll sleep
		on it
	* Main.java: vars runTime, quietTime, consoleOutput
	    now used appropriately
	* interfaces/TrafficLight.java: `clock' again has type void;
	    performing but a single function. the required expression 
	    for whether the light is about to change was 
	    `getDelay() == 1' - assuming i'm reading it correctly - 
	    which has no side effects
	* TrafficLightImpl.java: updated accordingly.
	* LearnerModuleImpl.java: tidied up updateTrafficLights slightly
	    - necessary because it treated TrafficLight.clock() as a
	    boolean. the intention is to eventually move 
	    RoadMap.stateCode() and all learner logic from Main into
	    LearnerModuleImpl.

2012-06-02 16:23:10 Gill <gmail gillemorris>
	Haven't read ChangeLog or implemented a bunch of stuff I wanted